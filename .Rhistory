playerdata <- filter(x, playerID == ID[[1]])
print(summary(playerdata))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){p + xlim(xlim) + labs(title = playerName, x = "Points")}
else{p + labs(title = playerName, x = "Points")}
}
densityplot(fantasydata, eg[1,], xlim=c(0,35))
densityplot <- function(x, playerinfo, stat = "total", xlim){
playerName <- playerinfo[1]
ID <- playerinfo[2]
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
print(summary(playerdata))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){p + xlim(xlim) + labs(title = playerName[[1]], x = "Points")}
else{p + labs(title = playerName, x = "Points")}
}
densityplot(fantasydata, eg[1,], xlim=c(0,35))
teamdensity <- function(x, team, stat = "total", xlim){
apply(team, 1, densityplot, x=x)
}
teamdensity(fantasydata, eg)
densityplot <- function(x, playerinfo, stat = "total", xlim){
print(playerinfo)
playerName <- playerinfo[1]
ID <- playerinfo[2]
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
# print(summary(playerdata))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){p + xlim(xlim) + labs(title = playerName[[1]], x = "Points")}
else{p + labs(title = playerName, x = "Points")}
}
teamdensity(fantasydata, eg)
densityplot <- function(x, playerinfo, stat = "total", xlim){
playerName <- playerinfo[1]
ID <- playerinfo[2]
print(ID)
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
# print(summary(playerdata))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){p + xlim(xlim) + labs(title = playerName[[1]], x = "Points")}
else{p + labs(title = playerName, x = "Points")}
}
teamdensity(fantasydata, eg)
densityplot <- function(x, playerinfo, stat = "total", xlim){
playerName <- playerinfo[1]
ID <- playerinfo[2]
print(ID[[1]])
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
# print(summary(playerdata))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){p + xlim(xlim) + labs(title = playerName[[1]], x = "Points")}
else{p + labs(title = playerName, x = "Points")}
}
teamdensity <- function(x, team, stat = "total", xlim){
apply(team, 1, densityplot, x=x)
}
teamdensity(fantasydata, eg)
densityplot <- function(x, playerinfo, stat = "total", xlim){
playerName <- playerinfo[1]
print(playerName[[1]])
ID <- playerinfo[2]
#  print(ID[[1]])
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
#  print(summary(playerdata))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){p + xlim(xlim) + labs(title = playerName[[1]], x = "Points")}
else{p + labs(title = playerName, x = "Points")}
}
teamdensity(fantasydata, eg)
densityplot <- function(x, playerinfo, stat = "total", xlim){
playerName <- playerinfo[1]
#  print(playerName[[1]])
ID <- playerinfo[2]
#  print(ID[[1]])
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
print(summary(playerdata$total))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){p + xlim(xlim) + labs(title = playerName[[1]], x = "Points")}
else{p + labs(title = playerName, x = "Points")}
}
teamdensity(fantasydata, eg)
?apply
densityplot <- function(x, playerinfo, stat = "total", xlim){
print(summary(x$total))
playerName <- playerinfo[1]
#  print(playerName[[1]])
ID <- playerinfo[2]
#  print(ID[[1]])
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
#  print(summary(playerdata$total))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){p + xlim(xlim) + labs(title = playerName[[1]], x = "Points")}
else{p + labs(title = playerName, x = "Points")}
}
teamdensity <- function(x, team, stat = "total", xlim){
apply(team, 1, densityplot, x=x)
}
teamdensity(fantasydata, eg)
summary(fantasydata$total)
densityplot(fantasydata, eg[1,], xlim=c(0,35))
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
for(i in seq(1:5)){
densityplot(x, team[i,])
}
}
teamdensity(fantasydata, eg)
densityplot <- function(x, playerinfo, stat = "total", xlim){
print(summary(x$total))
playerName <- playerinfo[1]
#  print(playerName[[1]])
ID <- playerinfo[2]
#  print(ID[[1]])
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
#  print(summary(playerdata$total))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){return(p + xlim(xlim) + labs(title = playerName[[1]], x = "Points"))}
else{return(p + labs(title = playerName, x = "Points"))}
}
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
for(i in seq(1:5)){
assign(team[1,1], densityplot(x, team[i,]))
}
}
teamdensity(fantasydata, eg)
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
for(i in seq(1:5)){
assign(team[i,1], densityplot(x, team[i,]))
}
}
teamdensity(fantasydata, eg)
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
plots <- list()
for(i in seq(1:5)){
densityplot(x, team[i,])
}
}
teamdensity(fantasydata, eg)
densityplot <- function(x, playerinfo, stat = "total", xlim){
#print(summary(x$total))
playerName <- playerinfo[1]
#  print(playerName[[1]])
ID <- playerinfo[2]
#  print(ID[[1]])
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
print(summary(playerdata$total))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){return(p + xlim(xlim) + labs(title = playerName[[1]], x = "Points"))}
else{return(p + labs(title = playerName, x = "Points"))}
}
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
plots <- list()
for(i in seq(1:5)){
densityplot(x, team[i,])
}
}
teamdensity(fantasydata, eg)
?view
View
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
plots <- list()
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,])
}
}
teamdensity(fantasydata, eg)
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
plots <- list()
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,])
}
grid.arrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], ncol=5)
}
teamdensity(fantasydata, eg)
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
plots <- list()
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat)
}
grid.arrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], ncol=5)
}
densityplot <- function(x, playerinfo, stat = "total", xlim){
#print(summary(x$total))
playerName <- playerinfo[1]
#  print(playerName[[1]])
ID <- playerinfo[2]
#  print(ID[[1]])
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
#print(summary(playerdata$total))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){return(p + xlim(xlim) + labs(title = playerName[[1]], x = "Points"))}
else{return(p + labs(title = playerName, x = "Points"))}
}
teamdensity(fantasydata, eg)
densityplot <- function(x, playerinfo, stat = "total", xlim){
#print(summary(x$total))
playerName <- playerinfo[1]
print(playerName[[1]])
ID <- playerinfo[2]
#  print(ID[[1]])
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
#print(summary(playerdata$total))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){return(p + xlim(xlim) + labs(title = playerName[[1]], x = "Points"))}
else{return(p + labs(title = playerName, x = "Points"))}
}
teamdensity(fantasydata, eg)
densityplot <- function(x, playerinfo, stat = "total", xlim){
#print(summary(x$total))
playerName <- playerinfo[1]
#print(playerName[[1]])
ID <- playerinfo[2]
#  print(ID[[1]])
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
#print(summary(playerdata$total))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){return(p + xlim(xlim) + labs(title = playerName[[1]], x = "Points"))}
else{return(p + labs(title = playerName, x = "Points"))}
}
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
plots <- list()
for(i in seq(1:5)){
print(team[i,])
plots[[i]] <- densityplot(x, team[i,], stat = stat)
}
grid.arrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], ncol=5)
}
teamdensity(fantasydata, eg)
typeof(eg$playerName)
summary$eg
summary(eg)
?data.frame
eg <- data.frame("playerName" = list("Arteezy", "SumaiL", "Universe", "zai", "Cr1t-"),
"playerID" = c(86745912, 111620041, 87276347, 73562326, 25907144),
"Position" = c(1,2,3,4,5))
summary(eg)
teamdensity(fantasydata, eg)
?as.character
densityplot <- function(x, playerinfo, stat = "total", xlim){
#print(summary(x$total))
playerName <- as.character(playerinfo[1])
#print(playerName[[1]])
ID <- playerinfo[2]
#  print(ID[[1]])
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
#print(summary(playerdata$total))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){return(p + xlim(xlim) + labs(title = playerName[[1]], x = "Points"))}
else{return(p + labs(title = playerName, x = "Points"))}
}
eg <- data.frame("playerName" = c("Arteezy", "SumaiL", "Universe", "zai", "Cr1t-"),
"playerID" = c(86745912, 111620041, 87276347, 73562326, 25907144),
"Position" = c(1,2,3,4,5))
teamdensity(fantasydata, eg)
eg <- data.frame("playerName" = c("Arteezy", "SumaiL", "Universe", "zai", "Cr1t-"),
"playerID" = c(86745912, 111620041, 87276347, 73562326, 25907144),
"Position" = c(1,2,3,4,5), stringsAsFactors = FALSE)
summary(eg)
teamdensity(fantasydata, eg)
densityplot <- function(x, playerinfo, stat = "total", xlim){
#print(summary(x$total))
playerName <- playerinfo[1]
#print(playerName[[1]])
ID <- playerinfo[2]
#  print(ID[[1]])
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
#print(summary(playerdata$total))
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){return(p + xlim(xlim) + labs(title = playerName[[1]], x = "Points"))}
else{return(p + labs(title = playerName, x = "Points"))}
}
densityplot <- function(x, playerinfo, stat = "total", xlim){
playerName <- playerinfo[1]
ID <- playerinfo[2]
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){return(p + xlim(xlim) + labs(title = playerName[[1]], x = "Points"))}
else{return(p + labs(title = playerName, x = "Points"))}
}
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
plots <- list()
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat)
}
grid.arrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], ncol=5)
}
teamdensity(fantasydata, eg)
densityplot <- function(x, playerinfo, stat = "total", xlim){
playerName <- playerinfo[1]
print(playerName)
ID <- playerinfo[2]
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){return(p + xlim(xlim) + labs(title = playerName[[1]], x = "Points"))}
else{return(p + labs(title = playerName, x = "Points"))}
}
teamdensity(fantasydata, eg)
densityplot <- function(x, playerinfo, stat = "total", xlim){
playerName <- playerinfo[1]
print(summary(playerName))
ID <- playerinfo[2]
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){return(p + xlim(xlim) + labs(title = playerName[[1]], x = "Points"))}
else{return(p + labs(title = playerName, x = "Points"))}
}
teamdensity(fantasydata, eg)
densityplot <- function(x, playerinfo, stat = "total", xlim){
playerName <- as.character(playerinfo[1])
ID <- playerinfo[2]
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
if(!missing(xlim)){return(p + xlim(xlim) + labs(title = playerName[[1]], x = "Points"))}
else{return(p + labs(title = playerName, x = "Points"))}
}
teamdensity(fantasydata, eg)
teamdensity(fantasydata, eg, stat = "GPM")
teamdensity(fantasydata, eg, stat = "runes")
teamdensity(fantasydata, eg, stat = "wards")
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
plots <- list()
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat)
}
grid.arrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], ncol=3)
}
teamdensity(fantasydata, eg)
teamdensity(fantasydata, eg, xlim = c(0,35))
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
plots <- list()
if(missing(xlim)){
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat)
}
}else{
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat, xlim = xlim)
}
}
grid.arrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], ncol=3)
}
teamdensity(fantasydata, eg, xlim = c(0,35))
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
plots <- list()
if(missing(xlim)){
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat)
}
}else{
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat, xlim = xlim)
}
}
grid.arrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], ncol=1)
}
teamdensity(fantasydata, eg, xlim = c(0,35))
??density
densityplot <- function(x, playerinfo, stat = "total", xlim){
playerName <- as.character(playerinfo[1])
ID <- playerinfo[2]
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
p <- p + labs(title = playerName, x = "Points") + geom_vline(aes(xintercept = mean(playerdata[,stat])))
if(!missing(xlim)){return(p + xlim(xlim))}
else{return(p)}
}
teamdensity(fantasydata, eg, xlim = c(0,35))
?grid.arrange
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
plots <- list()
if(missing(xlim)){
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat)
}
}else{
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat, xlim = xlim)
}
}
arrangeGrob(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], ncol=1)
}
teamdensity(fantasydata, eg, xlim = c(0,35))
grob <- teamdensity(fantasydata, eg, xlim = c(0,35))
grob
plot(grob)
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
plots <- list()
if(missing(xlim)){
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat)
}
}else{
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat, xlim = xlim)
}
}
arrangeGrob(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], ncol=1, name = stat)
}
grob <- teamdensity(fantasydata, eg, xlim = c(0,35))
plot(grob)
densityplot <- function(x, playerinfo, stat = "total", xlim){
playerName <- as.character(playerinfo[1])
ID <- playerinfo[2]
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
p <- p + labs(title = playerName, x = (stat + "Points")) + geom_vline(aes(xintercept = mean(playerdata[,stat])))
if(!missing(xlim)){return(p + xlim(xlim))}
else{return(p)}
}
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
plots <- list()
if(missing(xlim)){
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat)
}
}else{
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat, xlim = xlim)
}
}
arrangeGrob(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], ncol=1)
}
grob <- teamdensity(fantasydata, eg, xlim = c(0,35))
densityplot <- function(x, playerinfo, stat = "total", xlim){
playerName <- as.character(playerinfo[1])
ID <- playerinfo[2]
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
p <- p + labs(title = playerName, x = paste(stat, "Points", sep = " ")) + geom_vline(aes(xintercept = mean(playerdata[,stat])))
if(!missing(xlim)){return(p + xlim(xlim))}
else{return(p)}
}
grob <- teamdensity(fantasydata, eg, xlim = c(0,35))
?paste
stat = "total"
paste(stat, "points", sep = " ")
densityplot <- function(x, playerinfo, stat = "total", xlim){
playerName <- as.character(playerinfo[1])
ID <- playerinfo[2]
position <- playerinfo[3]
playerdata <- filter(x, playerID == ID[[1]])
p <- ggplot(playerdata, aes_string(stat)) + stat_density(geom="step")
p <- p + labs(title = playerName, x = paste(stat, "points", sep = " ")) + geom_vline(aes(xintercept = mean(playerdata[,stat])))
if(!missing(xlim)){return(p + xlim(xlim))}
else{return(p)}
}
teamdensity <- function(x, team, stat = "total", xlim){
#apply(team, 1, densityplot, x=x)
plots <- list()
if(missing(xlim)){
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat)
}
}else{
for(i in seq(1:5)){
plots[[i]] <- densityplot(x, team[i,], stat = stat, xlim = xlim)
}
}
arrangeGrob(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]], ncol=1)
}
grob <- teamdensity(fantasydata, eg, xlim = c(0,35))
plot(grob)
rm(grob)
rm(tm)
rm(tmp)
rm(stat)
rm(players)
rm(p)
grob <- teamdensity(fantasydata, eg, xlim = c(0,35))
plot(grob)
rm(grob)
egtotal <- teamdensity(fantasydata, eg, xlim = c(0,35))
egGPM <- teamdensity(fantasydata, eg, xlim = c(0,35), stat = "GPM")
egGPM <- teamdensity(fantasydata, eg, stat = "GPM")
plot(egGPM)
grid.arrange(egGPM, egtotal, ncol=2)
